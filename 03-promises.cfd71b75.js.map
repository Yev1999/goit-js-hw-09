{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAItB,SAAsBC,GACpBA,EAAMC,iBAEN,MACEC,UAAYC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,IACvBN,EAAMO,OAEVC,YAAW,KACT,IAAIC,EAAW,EAEfC,EAAiBC,aAAY,KAC3B,GAAIL,EAAOM,OAASH,EAClBI,cAAcH,OACT,CACL,MAAMI,EAAaL,EAAWM,OAAOV,EAAKO,OAASG,OAAOX,EAAMQ,OAChEH,GAAY,GAcGO,EAZDP,EAYWN,EAZDW,EAavB,IAAIG,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQ,UAAEF,QAAUb,IAEpBgB,EAAO,UAAEH,QAAUb,QAlBdmB,MAAK,EAACN,SAAEA,EAAQb,MAAEA,MACjBR,EAAA4B,OAAOC,QAAQ,uBAAqBR,QAAiBb,UAEtDsB,OAAM,EAACT,SAAEA,EAAQb,MAAEA,MAClBR,EAAA4B,OAAOG,QAAQ,sBAAoBV,QAAeb,UAO9D,IAAuBa,EAAUb,IAJ1BE,EAAKO,SACPR,EAAMQ,UA5BX,IAAIF,EAAiB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitForm);\n\nlet timeIntervalId = null;\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.target;\n\n  setTimeout(() => {\n    let position = 0;\n\n    timeIntervalId = setInterval(() => {\n      if (amount.value <= position) {\n        clearInterval(timeIntervalId);\n      } else {\n        const localDelay = position * Number(step.value) + Number(delay.value);\n        position += 1;\n\n        createPromise(position, localDelay)\n          .then(({ position, delay }) => {\n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      }\n    }, step.value);\n  }, delay.value);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","event","preventDefault","elements","delay","delay1","step","amount","target","setTimeout","position1","$47d4ff9957288465$var$timeIntervalId","setInterval","value","clearInterval","localDelay","Number","position","Promise","resolve","reject","Math","random","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.cfd71b75.js.map"}